plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "jacoco"
    id "com.github.roroche.plantuml" version "1.0.2"
    id "org.fmiw.plantuml" version "0.1"
    id "org.jetbrains.dokka" version "0.10.1"
    id "io.codearte.nexus-staging" version "0.21.2"
    id "de.marcphilipp.nexus-publish" version "0.4.0"
}

group 'com.github.roroche'
if (project.hasProperty('newVersion')) {
    project.version = project.newVersion
} else {
    project.version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
    jcenter()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'ch.ifocusit:plantuml-builder:1.4'
    implementation 'io.github.classgraph:classgraph:4.8.78'
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testImplementation 'com.pragmaticobjects.oo.tests:oo-tests:0.0.1'
    testImplementation 'com.pragmaticobjects.oo.tests:tests-junit5:0.0.1'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testImplementation 'org.assertj:assertj-core:3.15.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

sourceSets {
    main.java.srcDirs += 'src/main/kotlin'
}

jacocoTestReport {
    executionData(tasks.withType(Test))
    reports {
        xml.enabled = true
    }
    dependsOn(check)
}

classDiagram {
    packageName = "com.github.roroche.eoplantumlbuilder"
    outputFile = project.file('diagrams/class_diagram.plantuml')
    ignoredClasses = [
            "com.github.roroche.eoplantumlbuilder.classes.Classes\$Simple",
            "com.github.roroche.eoplantumlbuilder.classes.Classes\$Wrap",
            "com.github.roroche.eoplantumlbuilder.diagrams.Diagram\$Simple",
            "com.github.roroche.eoplantumlbuilder.diagrams.Diagram\$Wrap",
            "com.github.roroche.eoplantumlbuilder.urls.Urls\$Simple",
            "com.github.roroche.eoplantumlbuilder.urls.Urls\$Wrap"
    ]
}

plantuml {
    options {
        outputDir = project.file('diagrams')
    }

    diagrams {
        classes {
            sourceFile = project.file('diagrams/class_diagram.plantuml')
        }
    }
}

generateDiagramClasses.dependsOn(buildClassDiagram)

dokka {
    outputFormat = 'javadoc'
    outputDirectory = "$buildDir/javadoc"
    configuration {
        reportUndocumented = true
        platform = "JVM"
        jdkVersion = 8
    }
}

//region Publishing
ext {
    PUBLISH_GROUP_ID = "com.github.roroche"
    PUBLISH_ARTIFACT_ID = "eo-plantuml-builder"
    PUBLISH_DESCRIPTION = "Kotlin library to build PlantUML diagrams"
}

apply from: "${rootProject.projectDir}/publish/publish_kotlin_library.gradle"
//endregion
