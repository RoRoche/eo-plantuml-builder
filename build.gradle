plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
    id "jacoco"
    id "com.github.roroche.plantuml" version "1.0.0"
    id "org.fmiw.plantuml" version "0.1"
}

group 'com.github.roroche'
if (project.hasProperty('newVersion')) {
    project.version = project.newVersion
} else {
    project.version = '0.0.1-SNAPSHOT'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation 'ch.ifocusit:plantuml-builder:1.4'
    implementation 'org.reflections:reflections:0.9.12'
    testImplementation('org.junit.jupiter:junit-jupiter:5.6.2')
    testImplementation 'com.pragmaticobjects.oo.tests:oo-tests:0.0.1'
    testImplementation 'com.pragmaticobjects.oo.tests:tests-junit5:0.0.1'
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.6.2")
    testImplementation 'org.assertj:assertj-core:3.15.0'
}

test {
    useJUnitPlatform()
}

compileKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

compileTestKotlin {
    kotlinOptions.jvmTarget = "1.8"
}

jacocoTestReport {
    executionData(tasks.withType(Test))
    reports {
        xml.enabled = true
    }
    dependsOn(check)
}

classDiagram {
    packageName = "com.github.roroche.eoplantumlbuilder"
    outputFile = project.file('diagrams/class_diagram.plantuml')
//    ignoredClasses = [
//            "com.github.roroche.eoplantumlbuilder.diagrams.Diagram\$Simple",
//            "com.github.roroche.eoplantumlbuilder.diagrams.Diagram\$Wrap",
//            "com.github.roroche.eoplantumlbuilder.classes.Classes\$Simple",
//            "com.github.roroche.eoplantumlbuilder.classes.Classes\$Wrap"
//    ]
}

plantuml {
    options {
        outputDir = project.file('diagrams')
    }

    diagrams {
        classes {
            sourceFile = project.file('diagrams/class_diagram.plantuml')
        }
    }
}

generateDiagramClasses.dependsOn(buildClassDiagram)